/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define DEFAULT 0
#define LOWER 1
#define RAISE 2
#define ADJUST 3

/ {
    behaviors {
        hm: homerow_mods {
			compatible = "zmk,behavior-hold-tap";
			label = "HOMEROW_MODS";
			#binding-cells = <2>;
			tapping-term-ms = <200>;
			quick-tap-ms = <500>;
			flavor = "tap-preferred";
			bindings = <&kp>, <&kp>;
            require-prior-idle-ms = <125>;
		};
    };
    
    conditional_layers {
        compatible = "zmk,conditional-layers";
            tri_layer {
                if-layers = <LOWER RAISE>;
                then-layer = <ADJUST>;
            };
        };

    keymap {
        compatible = "zmk,keymap";

        default_layer { 
            display-name = "base";
            bindings = <
// ----------------------------------------------
// |  ESC |  Q  |  W  |   E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | [ |
// |  TAB |  A  |  S  |   D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  | ' |
// |   `  |  Z  |  X  |   C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ] |
//                    | BSPC | SPC | ENT |   | ENT | SCP  | DEL |
                
                &kp ESC    &kp Q        &kp W       &kp E       &kp R            &kp T       &kp Y       &kp U              &kp I       &kp O       &kp P           &kp LBKT
                &kp TAB    &hm LCTRL A  &hm LALT S  &hm LGUI D  &hm LSHIFT F     &kp G       &kp H       &hm RSHIFT J       &hm RGUI K  &hm RALT L  &hm RCTRL SEMI  &kp SQT
                &kp GRAVE  &kp Z        &kp X       &kp C       &kp V            &kp B       &kp N       &kp M              &kp COMMA   &kp DOT     &kp FSLH        &kp RBKT
                                                    &lt 1 BSPC  &mt LSHIFT SPACE &lt 2 RET   &lt 2 RET   &lt RSHIFT SPACE   &lt 1 DEL
            >;
        };
        
        lower_layer {
            display-name = "lower";
            bindings = <
                &trans  &none           &none       &none           &none           &none       &none     &none             &none           &none           &none           &none
                &trans  &hm LCTRL EXCL  &hm LALT AT &hm LGUI HASH   &hm LSHIFT DLLR &kp PRCNT   &kp CARET &hm RSHIFT AMPS   &hm RGUI ASTRK  &hm RALT LPAR   &hm RCTRL RPAR  &kp EQUAL
                &trans  &kp N1          &kp N2      &kp N3          &kp N4          &kp N5      &kp N6    &kp N7            &kp N8          &kp N9          &kp N0          &kp DOT
                                        &trans      &trans          &trans          &trans      &trans    &trans

            >;
        };

        raise_layer {
            bindings = <
                &trans  &none  &none  &none   &none   &none     &kp MINUS  &kp HOME  &kp UP    &kp PG_UP &kp C_MUTE     &kp RGUI
                &trans  &none  &none  &none   &none   &none     &kp PLUS   &kp LEFT  &kp DOWN  &kp RIGHT &kp C_VOL_UP   &kp RCTRL
                &trans  &none  &none  &none   &none   &none     &kp PIPE   &kp END   &none     &kp PG_DN &kp C_VOL_DN &kp RALT
                                      &trans  &trans  &trans    &trans     &trans    &trans
                        >;
                };
        };

        adjust_layer {
            bindings = <
                &bootloader &none &none &none &bt BT_CLR &bt BT_SEL 0     &bt BT_SEL 3 &none &none &none &none &bootloader
                &none       &none &none &none &none      &bt BT_SEL 1     &bt BT_SEL 4 &none &none &none &none &none
                &none       &none &none &none &none      &bt BT_SEL 2     &bt BT_SEL 5 &none &none &none &none &none
                                        &none &none      &none            &none        &none &none
            >;

        };
};
